{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","App.module.css"],"names":["module","exports","ContactForm","state","name","number","handleSubmit","evt","preventDefault","checkContacts","props","contacts","alert","onSubmit","id","uuidv4","reset","arr","target","find","toLowerCase","changeInput","value","setState","this","className","s","section","newContacsForm","title","label","labelTitle","type","onChange","pattern","placeholder","required","button","Component","ContactList","onDelete","contacsList","map","item","close","onClick","Filter","findForm","App","filter","newContact","prevState","getVisibleContacts","el","includes","deleteContact","checkStorage","localStorage","getItem","JSON","parse","setItem","stringify","myPhonebook","bigHeader","smallHeader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dd5bf77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"newContacsForm\":\"ContactForm_newContacsForm__2sQ_P\",\"title\":\"ContactForm_title__2tZ9M\",\"label\":\"ContactForm_label__QcJ1A\",\"labelTitle\":\"ContactForm_labelTitle__3QB0C\",\"button\":\"ContactForm_button__1lnY0\",\"section\":\"ContactForm_section__Llxa0\"};","import React, { Component } from \"react\";\nimport s from \"./ContactForm.module.css\";\n// import PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    // this.props.onSubmitForm(this.state);\n    // this.reset();\n\n    const { name, number } = this.state;\n\n    if (this.checkContacts(this.props.contacts, name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      this.props.onSubmit({\n        id: uuidv4(),\n        name,\n        number,\n      });\n\n      this.reset();\n    }\n  };\n\n  checkContacts = (arr, target) => {\n    return arr.find(({ name }) => name.toLowerCase() === target.toLowerCase());\n  };\n\n  changeInput = (evt) => {\n    const { name, value } = evt.target;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <div className={s.section}>\n        <form className={s.newContacsForm} onSubmit={this.handleSubmit}>\n          <h2 className={s.title}>Добавить новый контакт:</h2>\n          <label className={s.label}>\n            <span className={s.labelTitle}>Имя:</span>\n            <input\n              type=\"text\"\n              onChange={this.changeInput}\n              value={name}\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              placeholder=\"введите имя\"\n              required\n            />\n          </label>\n          <label className={s.label}>\n            <span className={s.labelTitle}>Номер:</span>\n            <input\n              type=\"text\"\n              onChange={this.changeInput}\n              value={number}\n              name=\"number\"\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n              placeholder=\"введите номер телефона\"\n              required\n            />\n          </label>\n\n          <button type=\"submit\" className={s.button}>\n            Добавить\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\n// ContactForm.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n// };\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <ul className={s.contacsList}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.item}>\n        <span className={s.name}>{name}</span>: {number}\n        <button type=\"button\" className={s.close} onClick={() => onDelete(id)}>\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={s.findForm}>\n      <h2 className={s.title}>Поиск контактов:</h2>\n      <label className={s.label}>\n        <span className={s.labelTitle}>Имя:</span>\n        <input\n          type=\"text\"\n          onChange={onChange}\n          value={value}\n          name=\"filter\"\n          placeholder=\"введите имя\"\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./Components/ContactForm\";\nimport ContactList from \"./Components/ContactList\";\n\nimport Filter from \"./Components/Filter\";\nimport s from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const checkStorage = localStorage.getItem(\"contacts\");\n    if (checkStorage) {\n      this.setState({ contacts: JSON.parse(checkStorage) });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  handleSubmit = (newContact) => {\n    const { id, name, number } = newContact;\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, { id, name, number }],\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const value = this.state.filter;\n    return this.state.contacts.filter((el) =>\n      el.name.toLowerCase().includes(value.toLowerCase())\n    );\n  };\n\n  changeInput = (evt) => {\n    this.setState({ filter: evt.target.value });\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((el) => el.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <>\n        <div className={s.myPhonebook}>\n          <h2 className={s.bigHeader}>Моя телефонная книга</h2>\n          <ContactForm onSubmit={this.handleSubmit} contacts={contacts} />\n          <Filter value={filter} onChange={this.changeInput} />\n          <h2 className={s.smallHeader}>Мои контакты:</h2>\n          <ContactList\n            contacts={this.getVisibleContacts()}\n            onDelete={this.deleteContact}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacsList\":\"ContactList_contacsList__3PGTu\",\"item\":\"ContactList_item__2_9uD\",\"name\":\"ContactList_name__32o_B\",\"close\":\"ContactList_close__WYEFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findForm\":\"Filter_findForm__3RhBc\",\"title\":\"Filter_title__19w9Z\",\"label\":\"Filter_label__3Cf0p\",\"labelTitle\":\"Filter_labelTitle__VhPpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__1N9sU\",\"myPhonebook\":\"App_myPhonebook__y0_o2\",\"bigHeader\":\"App_bigHeader__3I-_1\",\"smallHeader\":\"App_smallHeader__3r1xa\"};"],"sourceRoot":""}